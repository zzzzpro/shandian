name: .NET Build and Publish

on:
  push:
    branches: [main, feature/*]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build and Publish for Linux-x64
      run: dotnet publish -c Release -r linux-x64 -p:PublishSingleFile=true -o ./publish/linux-x64

    - name: Build and Publish for Linux-arm64
      run: dotnet publish -c Release -r linux-arm64 -p:PublishSingleFile=true -o ./publish/linux-arm64

    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d%H%M%S')"  # 获取当前时间并设置为步骤输出。

    - name: Create tar.gz for Linux-x64
      run: tar -czvf ./publish/Client-linux-x64-${{ steps.date.outputs.date }}.tar.gz -C ./publish/linux-x64 .

    - name: Create tar.gz for Linux-arm64
      run: tar -czvf ./publish/Client-linux-arm64-${{ steps.date.outputs.date }}.tar.gz -C ./publish/linux-arm64 .

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 自动提供的GitHub token。
      with:
        tag_name: release-${{ steps.date.outputs.date }}  # 使用日期作为标签名。
        release_name: Release-${{ steps.date.outputs.date }}  # 创建的Release名称也包含日期。
        draft: false
        prerelease: false
        body: "Description of the release"

    - name: Upload Release Asset for Linux-x64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  
        asset_path: ./publish/Client-linux-x64-${{ steps.date.outputs.date }}.tar.gz  # 修改为你的构建输出路径和文件。
        asset_name: Client-linux-x64-${{ steps.date.outputs.date }}.tar.gz  # 文件名包含时间戳。
        asset_content_type: application/gzip  # 成品的内容类型。

    - name: Upload Release Asset for Linux-arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  
        asset_path: ./publish/Client-linux-arm64-${{ steps.date.outputs.date }}.tar.gz  # 修改为你的构建输出路径和文件。
        asset_name: Client-linux-arm64-${{ steps.date.outputs.date }}.tar.gz  # 文件名包含时间戳。
        asset_content_type: application/gzip  # 成品的内容类型。
